{"ast":null,"code":"import hex2hsl from './hex2hsl';\nimport hex2rgb from './hex2rgb';\nimport { invariant, isNumber, isString, messages } from './modules/utils';\nimport parseCSS from './parse-css';\n/**\n * Fade the color\n */\nexport default function fade(input) {\n  var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'rgb';\n  invariant(isString(input), messages.inputString);\n  invariant(isNumber(amount), messages.amount);\n  var hex = parseCSS(input);\n  var percentage = (100 - amount) / 100;\n  if (output === 'rgb') {\n    var _hex2rgb = hex2rgb(hex),\n      r = _hex2rgb.r,\n      g = _hex2rgb.g,\n      b = _hex2rgb.b;\n    return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(percentage, \")\");\n  }\n  if (output === 'hsl') {\n    var _hex2hsl = hex2hsl(hex),\n      h = _hex2hsl.h,\n      s = _hex2hsl.s,\n      l = _hex2hsl.l;\n    return \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(percentage, \")\");\n  }\n  return \"\".concat(hex).concat(Math.round(percentage * 255).toString(16));\n}","map":{"version":3,"names":["hex2hsl","hex2rgb","invariant","isNumber","isString","messages","parseCSS","fade","input","amount","arguments","length","undefined","output","inputString","hex","percentage","_hex2rgb","r","g","b","concat","_hex2hsl","h","s","l","Math","round","toString"],"sources":["/Users/jackmanning/Desktop/Railway-Jukebox/jukebox/node_modules/colorizr/src/fade.ts"],"sourcesContent":["import hex2hsl from './hex2hsl';\nimport hex2rgb from './hex2rgb';\nimport { invariant, isNumber, isString, messages } from './modules/utils';\nimport parseCSS from './parse-css';\nimport { ColorTypes } from './types';\n\n/**\n * Fade the color\n */\nexport default function fade(input: string, amount = 10, output: ColorTypes = 'rgb'): string {\n  invariant(isString(input), messages.inputString);\n  invariant(isNumber(amount), messages.amount);\n\n  const hex = parseCSS(input);\n  const percentage = (100 - amount) / 100;\n\n  if (output === 'rgb') {\n    const { r, g, b } = hex2rgb(hex);\n\n    return `rgba(${r}, ${g}, ${b}, ${percentage})`;\n  }\n\n  if (output === 'hsl') {\n    const { h, s, l } = hex2hsl(hex);\n\n    return `hsla(${h}, ${s}%, ${l}%, ${percentage})`;\n  }\n\n  return `${hex}${Math.round(percentage * 255).toString(16)}`;\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,iBAAiB;AACzE,OAAOC,QAAQ,MAAM,aAAa;AAGlC;;;AAGA,eAAc,SAAUC,IAAIA,CAACC,KAAa,EAAyC;EAAA,IAAvCC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqB,KAAK;EACjFR,SAAS,CAACE,QAAQ,CAACI,KAAK,CAAC,EAAEH,QAAQ,CAACS,WAAW,CAAC;EAChDZ,SAAS,CAACC,QAAQ,CAACM,MAAM,CAAC,EAAEJ,QAAQ,CAACI,MAAM,CAAC;EAE5C,IAAMM,GAAG,GAAGT,QAAQ,CAACE,KAAK,CAAC;EAC3B,IAAMQ,UAAU,GAAG,CAAC,GAAG,GAAGP,MAAM,IAAI,GAAG;EAEvC,IAAII,MAAM,KAAK,KAAK,EAAE;IACpB,IAAAI,QAAA,GAAoBhB,OAAO,CAACc,GAAG,CAAC;MAAxBG,CAAC,GAAAD,QAAA,CAADC,CAAC;MAAEC,CAAC,GAAAF,QAAA,CAADE,CAAC;MAAEC,CAAC,GAAAH,QAAA,CAADG,CAAC;IAEf,eAAAC,MAAA,CAAeH,CAAC,QAAAG,MAAA,CAAKF,CAAC,QAAAE,MAAA,CAAKD,CAAC,QAAAC,MAAA,CAAKL,UAAU;;EAG7C,IAAIH,MAAM,KAAK,KAAK,EAAE;IACpB,IAAAS,QAAA,GAAoBtB,OAAO,CAACe,GAAG,CAAC;MAAxBQ,CAAC,GAAAD,QAAA,CAADC,CAAC;MAAEC,CAAC,GAAAF,QAAA,CAADE,CAAC;MAAEC,CAAC,GAAAH,QAAA,CAADG,CAAC;IAEf,eAAAJ,MAAA,CAAeE,CAAC,QAAAF,MAAA,CAAKG,CAAC,SAAAH,MAAA,CAAMI,CAAC,SAAAJ,MAAA,CAAML,UAAU;;EAG/C,UAAAK,MAAA,CAAUN,GAAG,EAAAM,MAAA,CAAGK,IAAI,CAACC,KAAK,CAACX,UAAU,GAAG,GAAG,CAAC,CAACY,QAAQ,CAAC,EAAE,CAAC;AAC3D"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import hsl2rgb from './hsl2rgb';\nimport { invariant, isHSL, isNumber, isPlainObject, isRGB, messages } from './modules/utils';\nimport rgb2Hsl from './rgb2hsl';\nexport default function formatCSS(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  invariant(isPlainObject(input) && (isRGB(input) || isHSL(input)), messages.invalid);\n  var alpha = options.alpha,\n    _options$model = options.model,\n    model = _options$model === void 0 ? isRGB(input) ? 'rgb' : 'hsl' : _options$model;\n  var prefix = \"\".concat(model).concat(isNumber(alpha) ? 'a' : '');\n  var color = input;\n  var params = [];\n  if (model === 'rgb') {\n    if (isHSL(color)) {\n      color = hsl2rgb(color);\n    }\n    params = [Math.round(color.r), Math.round(color.g), Math.round(color.b)];\n  } else {\n    if (isRGB(color)) {\n      color = rgb2Hsl(color);\n    }\n    params = [Math.round(color.h), \"\".concat(Math.round(color.s), \"%\"), \"\".concat(Math.round(color.l), \"%\")];\n  }\n  if (isNumber(alpha)) {\n    params.push(alpha);\n  }\n  return \"\".concat(prefix, \"(\").concat(params.join(', '), \")\");\n}","map":{"version":3,"names":["hsl2rgb","invariant","isHSL","isNumber","isPlainObject","isRGB","messages","rgb2Hsl","formatCSS","input","options","arguments","length","undefined","invalid","alpha","_options$model","model","prefix","concat","color","params","Math","round","r","g","b","h","s","l","push","join"],"sources":["/Users/jackmanning/Desktop/Railway-Jukebox/jukebox/node_modules/colorizr/src/format-css.ts"],"sourcesContent":["import hsl2rgb from './hsl2rgb';\nimport { invariant, isHSL, isNumber, isPlainObject, isRGB, messages } from './modules/utils';\nimport rgb2Hsl from './rgb2hsl';\nimport { FormatOptions, HSL, RGB } from './types';\n\nexport default function formatCSS(input: HSL | RGB, options: FormatOptions = {}): string {\n  invariant(isPlainObject(input) && (isRGB(input) || isHSL(input)), messages.invalid);\n\n  const { alpha, model = isRGB(input) ? 'rgb' : 'hsl' } = options;\n  const prefix = `${model}${isNumber(alpha) ? 'a' : ''}`;\n  let color = input;\n  let params = [];\n\n  if (model === 'rgb') {\n    if (isHSL(color)) {\n      color = hsl2rgb(color);\n    }\n\n    params = [Math.round(color.r), Math.round(color.g), Math.round(color.b)];\n  } else {\n    if (isRGB(color)) {\n      color = rgb2Hsl(color);\n    }\n\n    params = [Math.round(color.h), `${Math.round(color.s)}%`, `${Math.round(color.l)}%`];\n  }\n\n  if (isNumber(alpha)) {\n    params.push(alpha);\n  }\n\n  return `${prefix}(${params.join(', ')})`;\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,iBAAiB;AAC5F,OAAOC,OAAO,MAAM,WAAW;AAG/B,eAAc,SAAUC,SAASA,CAACC,KAAgB,EAA6B;EAAA,IAA3BC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyB,EAAE;EAC7EV,SAAS,CAACG,aAAa,CAACK,KAAK,CAAC,KAAKJ,KAAK,CAACI,KAAK,CAAC,IAAIP,KAAK,CAACO,KAAK,CAAC,CAAC,EAAEH,QAAQ,CAACQ,OAAO,CAAC;EAEnF,IAAQC,KAAK,GAA2CL,OAAO,CAAvDK,KAAK;IAAAC,cAAA,GAA2CN,OAAO,CAAhDO,KAAK;IAALA,KAAK,GAAAD,cAAA,cAAGX,KAAK,CAACI,KAAK,CAAC,GAAG,KAAK,GAAG,KAAK,GAAAO,cAAA;EACnD,IAAME,MAAM,MAAAC,MAAA,CAAMF,KAAK,EAAAE,MAAA,CAAGhB,QAAQ,CAACY,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAE;EACtD,IAAIK,KAAK,GAAGX,KAAK;EACjB,IAAIY,MAAM,GAAG,EAAE;EAEf,IAAIJ,KAAK,KAAK,KAAK,EAAE;IACnB,IAAIf,KAAK,CAACkB,KAAK,CAAC,EAAE;MAChBA,KAAK,GAAGpB,OAAO,CAACoB,KAAK,CAAC;;IAGxBC,MAAM,GAAG,CAACC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,CAAC,CAAC,EAAEF,IAAI,CAACC,KAAK,CAACH,KAAK,CAACK,CAAC,CAAC,EAAEH,IAAI,CAACC,KAAK,CAACH,KAAK,CAACM,CAAC,CAAC,CAAC;GACzE,MAAM;IACL,IAAIrB,KAAK,CAACe,KAAK,CAAC,EAAE;MAChBA,KAAK,GAAGb,OAAO,CAACa,KAAK,CAAC;;IAGxBC,MAAM,GAAG,CAACC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACO,CAAC,CAAC,KAAAR,MAAA,CAAKG,IAAI,CAACC,KAAK,CAACH,KAAK,CAACQ,CAAC,CAAC,WAAAT,MAAA,CAAQG,IAAI,CAACC,KAAK,CAACH,KAAK,CAACS,CAAC,CAAC,OAAI;;EAGtF,IAAI1B,QAAQ,CAACY,KAAK,CAAC,EAAE;IACnBM,MAAM,CAACS,IAAI,CAACf,KAAK,CAAC;;EAGpB,UAAAI,MAAA,CAAUD,MAAM,OAAAC,MAAA,CAAIE,MAAM,CAACU,IAAI,CAAC,IAAI,CAAC;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
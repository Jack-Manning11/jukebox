{"ast":null,"code":"import _classCallCheck from \"/Users/jackmanning/Desktop/Railway-Jukebox/jukebox/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jackmanning/Desktop/Railway-Jukebox/jukebox/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"/Users/jackmanning/Desktop/Railway-Jukebox/jukebox/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport chroma from './chroma';\nimport _compare from './compare';\nimport _darken from './darken';\nimport _desaturate from './desaturate';\nimport _fade from './fade';\nimport formatCSS from './format-css';\nimport _lighten from './lighten';\nimport luminance from './luminance';\nimport parseColor from './modules/parse-color';\nimport { invariant } from './modules/utils';\nimport _rotate from './rotate';\nimport _saturate from './saturate';\nimport textColor from './text-color';\nvar Colorizr = /*#__PURE__*/function () {\n  function Colorizr(color) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Colorizr);\n    _defineProperty(this, \"hex\", void 0);\n    _defineProperty(this, \"model\", void 0);\n    _defineProperty(this, \"hsl\", void 0);\n    _defineProperty(this, \"rgb\", void 0);\n    invariant(!!color, 'color is required');\n    var _options$model = options.model,\n      model = _options$model === void 0 ? 'rgb' : _options$model;\n    var _parseColor = parseColor(color),\n      hex = _parseColor.hex,\n      hsl = _parseColor.hsl,\n      rgb = _parseColor.rgb;\n    this.model = model;\n    this.hex = hex;\n    this.hsl = hsl;\n    this.rgb = rgb;\n  }\n  /**\n   * Get css string\n   */\n  _createClass(Colorizr, [{\n    key: \"css\",\n    get: function get() {\n      return formatCSS(this.hsl, {\n        model: this.model\n      });\n    }\n    /**\n     * Get the red value\n     */\n  }, {\n    key: \"red\",\n    get: function get() {\n      return Number(this.rgb.r);\n    }\n    /**\n     * Get the green value\n     */\n  }, {\n    key: \"green\",\n    get: function get() {\n      return Number(this.rgb.g);\n    }\n    /**\n     * Get the blue value\n     */\n  }, {\n    key: \"blue\",\n    get: function get() {\n      return Number(this.rgb.b);\n    }\n    /**\n     * Get the hue value\n     */\n  }, {\n    key: \"hue\",\n    get: function get() {\n      return Number(this.hsl.h);\n    }\n    /**\n     * Get the saturation value\n     */\n  }, {\n    key: \"saturation\",\n    get: function get() {\n      return Number(this.hsl.s);\n    }\n    /**\n     * Get the lightness value\n     */\n  }, {\n    key: \"lightness\",\n    get: function get() {\n      return Number(this.hsl.l);\n    }\n    /**\n     * Get the luminance value\n     */\n  }, {\n    key: \"luminance\",\n    get: function get() {\n      return luminance(this.hex);\n    }\n    /**\n     * Get the chroma value\n     */\n  }, {\n    key: \"chroma\",\n    get: function get() {\n      return chroma(this.hex);\n    }\n    /**\n     * Get the contrasted color\n     */\n  }, {\n    key: \"textColor\",\n    get: function get() {\n      return textColor(this.hex);\n    }\n    /**\n     * Test 2 colors for compliance\n     */\n  }, {\n    key: \"compare\",\n    value: function compare(input) {\n      return _compare(this.hex, input);\n    }\n    /**\n     * Increase lightness\n     */\n  }, {\n    key: \"lighten\",\n    value: function lighten() {\n      var percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return _lighten(this.hex, percentage);\n    }\n    /**\n     * Decrease lightness\n     */\n  }, {\n    key: \"darken\",\n    value: function darken() {\n      var percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return _darken(this.hex, percentage);\n    }\n    /**\n     * Increase saturation\n     */\n  }, {\n    key: \"saturate\",\n    value: function saturate() {\n      var percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return _saturate(this.hex, percentage);\n    }\n    /**\n     * Decrease saturation\n     */\n  }, {\n    key: \"desaturate\",\n    value: function desaturate() {\n      var percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return _desaturate(this.hex, percentage);\n    }\n    /**\n     * Invert color\n     */\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      return _rotate(this.hex, 180);\n    }\n    /**\n     * Rotate color\n     */\n  }, {\n    key: \"rotate\",\n    value: function rotate() {\n      var degrees = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n      return _rotate(this.hex, degrees);\n    }\n    /**\n     * Fade color\n     */\n  }, {\n    key: \"fade\",\n    value: function fade() {\n      var percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return _fade(this.hex, percentage, this.model);\n    }\n  }]);\n  return Colorizr;\n}();\nexport { default as brightnessDifference } from './brightness-difference';\nexport { default as chroma } from './chroma';\nexport { default as colorDifference } from './color-difference';\nexport { default as compare } from './compare';\nexport { default as contrast } from './contrast';\nexport { default as darken } from './darken';\nexport { default as desaturate } from './desaturate';\nexport { default as fade } from './fade';\nexport { default as formatCSS } from './format-css';\nexport { default as formatHex } from './format-hex';\nexport { default as hex2hsl } from './hex2hsl';\nexport { default as hex2rgb } from './hex2rgb';\nexport { default as hsl2hex } from './hsl2hex';\nexport { default as hsl2rgb } from './hsl2rgb';\nexport { default as isValidColor } from './is-valid-color';\nexport { default as isValidHex } from './is-valid-hex';\nexport { default as lighten } from './lighten';\nexport { default as luminance } from './luminance';\nexport { default as name } from './name';\nexport { default as palette } from './palette';\nexport { default as parseCSS } from './parse-css';\nexport { default as random } from './random';\nexport { default as rgb2hex } from './rgb2hex';\nexport { default as rgb2hsl } from './rgb2hsl';\nexport { default as rotate } from './rotate';\nexport { default as saturate } from './saturate';\nexport { default as scheme } from './scheme';\nexport { default as textColor } from './text-color';\nexport * from './types';\nexport default Colorizr;","map":{"version":3,"names":["chroma","compare","darken","desaturate","fade","formatCSS","lighten","luminance","parseColor","invariant","rotate","saturate","textColor","Colorizr","color","options","arguments","length","undefined","_classCallCheck","_defineProperty","_options$model","model","_parseColor","hex","hsl","rgb","_createClass","key","get","Number","r","g","b","h","s","l","value","input","percentage","invert","degrees","default","brightnessDifference","colorDifference","contrast","formatHex","hex2hsl","hex2rgb","hsl2hex","hsl2rgb","isValidColor","isValidHex","name","palette","parseCSS","random","rgb2hex","rgb2hsl","scheme"],"sources":["/Users/jackmanning/Desktop/Railway-Jukebox/jukebox/node_modules/colorizr/src/index.ts"],"sourcesContent":["import chroma from './chroma';\nimport compare from './compare';\nimport darken from './darken';\nimport desaturate from './desaturate';\nimport fade from './fade';\nimport formatCSS from './format-css';\nimport lighten from './lighten';\nimport luminance from './luminance';\nimport parseColor from './modules/parse-color';\nimport { invariant } from './modules/utils';\nimport rotate from './rotate';\nimport saturate from './saturate';\nimport textColor from './text-color';\nimport { Analysis, HSL, Options, RGB, RGBArray } from './types';\n\nclass Colorizr {\n  public hex: string;\n  private readonly model: Options['model'];\n  public hsl: HSL;\n  public rgb: RGB;\n\n  constructor(color: string | HSL | RGB | RGBArray, options: Options = {}) {\n    invariant(!!color, 'color is required');\n\n    const { model = 'rgb' } = options;\n    const { hex, hsl, rgb } = parseColor(color);\n\n    this.model = model;\n    this.hex = hex;\n    this.hsl = hsl;\n    this.rgb = rgb;\n  }\n\n  /**\n   * Get css string\n   */\n  get css(): string {\n    return formatCSS(this.hsl, { model: this.model });\n  }\n\n  /**\n   * Get the red value\n   */\n  get red(): number {\n    return Number(this.rgb.r);\n  }\n\n  /**\n   * Get the green value\n   */\n  get green(): number {\n    return Number(this.rgb.g);\n  }\n\n  /**\n   * Get the blue value\n   */\n  get blue(): number {\n    return Number(this.rgb.b);\n  }\n\n  /**\n   * Get the hue value\n   */\n  get hue(): number {\n    return Number(this.hsl.h);\n  }\n\n  /**\n   * Get the saturation value\n   */\n  get saturation(): number {\n    return Number(this.hsl.s);\n  }\n\n  /**\n   * Get the lightness value\n   */\n  get lightness(): number {\n    return Number(this.hsl.l);\n  }\n\n  /**\n   * Get the luminance value\n   */\n  get luminance(): number {\n    return luminance(this.hex);\n  }\n\n  /**\n   * Get the chroma value\n   */\n  get chroma(): number {\n    return chroma(this.hex);\n  }\n\n  /**\n   * Get the contrasted color\n   */\n  get textColor(): string {\n    return textColor(this.hex);\n  }\n\n  /**\n   * Test 2 colors for compliance\n   */\n  public compare(input: string): Analysis {\n    return compare(this.hex, input);\n  }\n\n  /**\n   * Increase lightness\n   */\n  public lighten(percentage = 10): string {\n    return lighten(this.hex, percentage);\n  }\n\n  /**\n   * Decrease lightness\n   */\n  public darken(percentage = 10): string {\n    return darken(this.hex, percentage);\n  }\n\n  /**\n   * Increase saturation\n   */\n  public saturate(percentage = 10): string {\n    return saturate(this.hex, percentage);\n  }\n\n  /**\n   * Decrease saturation\n   */\n  public desaturate(percentage = 10): string {\n    return desaturate(this.hex, percentage);\n  }\n\n  /**\n   * Invert color\n   */\n  public invert(): string {\n    return rotate(this.hex, 180);\n  }\n\n  /**\n   * Rotate color\n   */\n  public rotate(degrees = 15): string {\n    return rotate(this.hex, degrees);\n  }\n\n  /**\n   * Fade color\n   */\n  public fade(percentage = 10): string {\n    return fade(this.hex, percentage, this.model);\n  }\n}\n\nexport { default as brightnessDifference } from './brightness-difference';\nexport { default as chroma } from './chroma';\nexport { default as colorDifference } from './color-difference';\nexport { default as compare } from './compare';\nexport { default as contrast } from './contrast';\nexport { default as darken } from './darken';\nexport { default as desaturate } from './desaturate';\nexport { default as fade } from './fade';\nexport { default as formatCSS } from './format-css';\nexport { default as formatHex } from './format-hex';\nexport { default as hex2hsl } from './hex2hsl';\nexport { default as hex2rgb } from './hex2rgb';\nexport { default as hsl2hex } from './hsl2hex';\nexport { default as hsl2rgb } from './hsl2rgb';\nexport { default as isValidColor } from './is-valid-color';\nexport { default as isValidHex } from './is-valid-hex';\nexport { default as lighten } from './lighten';\nexport { default as luminance } from './luminance';\nexport { default as name } from './name';\nexport { default as palette } from './palette';\nexport { default as parseCSS } from './parse-css';\nexport { default as random } from './random';\nexport { default as rgb2hex } from './rgb2hex';\nexport { default as rgb2hsl } from './rgb2hsl';\nexport { default as rotate } from './rotate';\nexport { default as saturate } from './saturate';\nexport { default as scheme } from './scheme';\nexport { default as textColor } from './text-color';\n\nexport * from './types';\n\nexport default Colorizr;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
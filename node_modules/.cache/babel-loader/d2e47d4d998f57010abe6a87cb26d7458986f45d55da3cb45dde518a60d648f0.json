{"ast":null,"code":"import _toConsumableArray from \"/Users/jackmanning/Desktop/Railway-Jukebox/jukebox/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport isValidHex from './is-valid-hex';\nimport { invariant, isString, messages } from './modules/utils';\nexport default function formatHex(input) {\n  invariant(isString(input), messages.inputString);\n  var color = input.replace('#', '');\n  var hex = color;\n  if (color.length === 3 || color.length === 4) {\n    hex = '';\n    _toConsumableArray(color).forEach(function (d) {\n      hex += d + d;\n    });\n  }\n  hex = \"#\".concat(hex);\n  invariant(isValidHex(hex), 'invalid hex');\n  return hex;\n}","map":{"version":3,"names":["isValidHex","invariant","isString","messages","formatHex","input","inputString","color","replace","hex","length","_toConsumableArray","forEach","d","concat"],"sources":["/Users/jackmanning/Desktop/Railway-Jukebox/jukebox/node_modules/colorizr/src/format-hex.ts"],"sourcesContent":["import isValidHex from './is-valid-hex';\nimport { invariant, isString, messages } from './modules/utils';\n\nexport default function formatHex(input: string): string {\n  invariant(isString(input), messages.inputString);\n\n  const color = input.replace('#', '');\n  let hex = color;\n\n  if (color.length === 3 || color.length === 4) {\n    hex = '';\n\n    [...color].forEach(d => {\n      hex += d + d;\n    });\n  }\n\n  hex = `#${hex}`;\n\n  invariant(isValidHex(hex), 'invalid hex');\n\n  return hex;\n}\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,gBAAgB;AACvC,SAASC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,iBAAiB;AAE/D,eAAc,SAAUC,SAASA,CAACC,KAAa;EAC7CJ,SAAS,CAACC,QAAQ,CAACG,KAAK,CAAC,EAAEF,QAAQ,CAACG,WAAW,CAAC;EAEhD,IAAMC,KAAK,GAAGF,KAAK,CAACG,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;EACpC,IAAIC,GAAG,GAAGF,KAAK;EAEf,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIH,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IAC5CD,GAAG,GAAG,EAAE;IAERE,kBAAA,CAAIJ,KAAK,EAAEK,OAAO,CAAC,UAAAC,CAAC,EAAG;MACrBJ,GAAG,IAAII,CAAC,GAAGA,CAAC;IACd,CAAC,CAAC;;EAGJJ,GAAG,OAAAK,MAAA,CAAOL,GAAG,CAAE;EAEfR,SAAS,CAACD,UAAU,CAACS,GAAG,CAAC,EAAE,aAAa,CAAC;EAEzC,OAAOA,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
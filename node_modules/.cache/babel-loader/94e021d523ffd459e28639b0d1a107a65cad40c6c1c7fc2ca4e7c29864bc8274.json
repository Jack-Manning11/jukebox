{"ast":null,"code":"var _jsxFileName = \"/Users/jackmanning/Downloads/FuckupTesting/client/src/Login.jsx\";\nimport React from \"react\";\nimport { LoginButton, LoginLink, LoginContainer, LoginInfo, Title, Description } from \"./styles/Login.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const scopes = ['streaming', 'user-read-email', 'user-read-private', 'user-library-read', 'user-library-modify', 'user-read-playback-state', 'user-modify-playback-state'];\n  const AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${process.env.REACT_APP_CLIENT_ID}&response_type=code&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}&scope=${scopes.join(\" \")}`;\n  return /*#__PURE__*/_jsxDEV(LoginContainer, {\n    children: [/*#__PURE__*/_jsxDEV(LoginInfo, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Breakup Stereo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        children: \"This musical interface was made as an installation looking at the idea of breakup music. A seamless jukebox that allows users to interact with and listen to what others have determined are breakup songs to them. Logging in will authorize this application to create a player instance connected to your spotify and play songs from our curated playlist. Login below to get started. Created by Jack Manning and Anthony Pinter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n      children: /*#__PURE__*/_jsxDEV(LoginLink, {\n        href: AUTH_URL,\n        children: \"Login with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","LoginButton","LoginLink","LoginContainer","LoginInfo","Title","Description","jsxDEV","_jsxDEV","Login","scopes","AUTH_URL","process","env","REACT_APP_CLIENT_ID","REACT_APP_REDIRECT_URI","join","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/Users/jackmanning/Downloads/FuckupTesting/client/src/Login.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { \n    LoginButton, \n    LoginLink, \n    LoginContainer, \n    LoginInfo,\n    Title,\n    Description \n} from \"./styles/Login.styles\";\n\nconst Login = () => {\n    const scopes = [\n        'streaming',\n        'user-read-email',\n        'user-read-private',\n        'user-library-read',\n        'user-library-modify',\n        'user-read-playback-state',\n        'user-modify-playback-state'\n    ];\n    const AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${process.env.REACT_APP_CLIENT_ID}&response_type=code&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}&scope=${scopes.join(\" \")}`;\n    \n    return (\n        <LoginContainer>\n            <LoginInfo>\n                <Title>Breakup Stereo</Title>\n                <Description>This musical interface was made as an installation looking at the idea of breakup music. A seamless jukebox that allows users to interact with and listen to what others have determined are breakup songs to them. Logging in will authorize this application to create a player instance connected to your spotify and play songs from our curated playlist. Login below to get started. Created by Jack Manning and Anthony Pinter</Description>\n            </LoginInfo>\n            <LoginButton>\n                <LoginLink href={AUTH_URL}>Login with Spotify</LoginLink>\n            </LoginButton>\n        </LoginContainer>\n    );\n};\n\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SACIC,WAAW,EACXC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,KAAK,EACLC,WAAW,QACR,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,MAAM,GAAG,CACX,WAAW,EACX,iBAAiB,EACjB,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACrB,0BAA0B,EAC1B,4BAA4B,CAC/B;EACD,MAAMC,QAAQ,GAAI,oDAAmDC,OAAO,CAACC,GAAG,CAACC,mBAAoB,oCAAmCF,OAAO,CAACC,GAAG,CAACE,sBAAuB,UAASL,MAAM,CAACM,IAAI,CAAC,GAAG,CAAE,EAAC;EAEtM,oBACIR,OAAA,CAACL,cAAc;IAAAc,QAAA,gBACXT,OAAA,CAACJ,SAAS;MAAAa,QAAA,gBACNT,OAAA,CAACH,KAAK;QAAAY,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7Bb,OAAA,CAACF,WAAW;QAAAW,QAAA,EAAC;MAAqa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzb,CAAC,eACZb,OAAA,CAACP,WAAW;MAAAgB,QAAA,eACRT,OAAA,CAACN,SAAS;QAACoB,IAAI,EAAEX,QAAS;QAAAM,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEzB,CAAC;AAACE,EAAA,GAvBId,KAAK;AAyBX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}